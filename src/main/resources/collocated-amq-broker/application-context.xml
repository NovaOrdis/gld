<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015 Nova Ordis LLC
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/jms
                           http://www.springframework.org/schema/jms/spring-jms-3.2.xsd
                           http://activemq.apache.org/schema/core
                           http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd">

    <!--  Collocated ActiveMQ Broker-->
    <bean id="pooledBroker" class="org.apache.activemq.xbean.PooledBrokerFactoryBean">
        <property name="config" value="classpath:collocated-amq-broker/collocated-broker-configuration.xml"/>
    </bean>

    <!-- Transport Connection Listener Monitor -->
    <!--
    <bean id="transportConnectionListener" class="....util.jms.listeners.TransportConnectionListener" />
    -->

    <amq:connectionFactory id="inVMConnectionFactory" brokerURL="vm://localhost" useAsyncSend="true">
        <!-- <property name="transportListener" ref="transportConnectionListener" /> -->
    </amq:connectionFactory>

    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
          p:connectionFactory-ref="inVMConnectionFactory"
          depends-on="pooledBroker"
          p:maxConnections="3"/>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate"
          p:connectionFactory-ref="pooledConnectionFactory"
          p:timeToLive="600000"
          p:explicitQosEnabled="true"/>

    <!--
    TODO Do I really need this?
    -->
    <!--
    <amq:queue id="TEST" physicalName="TEST" />
    -->

    <!--
        Cosumer configuration
    -->

    <!--
    <bean id="jmsConsumerConnectionFactory"
          class="org.springframework.jms.connection.SingleConnectionFactory"
          depends-on="pooledBroker"
          p:targetConnectionFactory-ref="jmsFactory" />
    -->

    <!-- Consume any messages that end up in the DLQ from the embedded broker so they don't get forwarded
         for consumption through the stand alone broker.
         Messages in this queue should be mainly expired messages. -->
    <!--
    <jms:listener-container container-type="default"
                            connection-factory="jmsConsumerConnectionFactory"
                            acknowledge="auto"
                            concurrency="5">
        <jms:listener destination="DLQ.>" ref="deadLetterQueueJmsMessageListener"/>
    </jms:listener-container>
    -->

    <!-- Message Advisories Topic Listeners, part of the monitoring is done with them -->
    <!--
    <jms:listener-container container-type="default"
                            connection-factory="jmsConsumerConnectionFactory"
                            destination-type="topic">
        <jms:listener destination="ActiveMQ.Advisory.Connection" ref="topicAdvisoryConnectionJmsMessageListener"   />
        <jms:listener destination="ActiveMQ.Advisory.Producer.>" ref="topicAdvisoryProducerJmsMessageListener"   />
        <jms:listener destination="ActiveMQ.Advisory.Consumer.>" ref="topicAdvisoryConsumerJmsMessageListener"   />
        <jms:listener destination="ActiveMQ.Advisory.Expired.>" ref="topicAdvisoryExpiredJmsMessageListener"   />
        <jms:listener destination="ActiveMQ.Advisory.MessageDLQd.>" ref="topicAdvisoryDLQdJmsMessageListener" />
        <jms:listener destination="ActiveMQ.Advisory.NetworkBridge" ref="topicAdvisoryNetworkBridgeJmsMessageListener"/>
    </jms:listener-container>
    -->

</beans>