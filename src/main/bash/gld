#!/bin/bash

reldir=$(dirname $0)
home_dir=${reldir}/..
verbose=false
main_class=com.novaordis.gld.Main
memory=1024m

function debug()
{
    ${verbose} && echo "$@" 1>&2;
    return 0
}

function debug-arguments
{
    ${verbose} && echo "${FUNCNAME[1]}($@)" 1>&2;
    return 0
}

function fail
{
    echo "[error]: $@" 1>&2 && exit 1
}

function get_java_home()
{
    # local java_home="/usr/java/jdk64-1.7.0_45"
    local java_home=""

    if [ -n "${JAVA_HOME}" ]; then
        debug "using JAVA_HOME from environment ${JAVA_HOME}"
        java_home=${JAVA_HOME}
    else
        local name;
        name=$(uname -n)
        name=${name##*.}

        [ "${name}" = "local" -o "${name}" = "ovidius-mbp" ] && java_home="/Library/Java/JavaVirtualMachines/jdk1.7.0_60.jdk/Contents/Home"
    fi

    echo ${java_home}
}

function get_classpath()
{
    debug "${FUNCNAME[0]}: home_dir=${home_dir}"
    local first=true
    for i in ${home_dir}/lib/*.jar; do
        ${first} && first=false || echo -n ":"
        echo -n ${i}
    done
}

# may return empty string
function get-gld-pids()
{
    pids=$(ps -ef | grep java | grep com.novaordis.gld.Main | awk '{print $2}')
    echo ${pids}
}

debug_args=""
output_settings=""
background=false
do_kill=false

while [ "$1" != "" ]; do
    if [ "$1" = "--debug" ]; then
        debug_args="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5011"
        verbose=true
    elif [ "$1" = "--verbose" ]; then
        verbose=true
    elif [ "$1" = "kill" ]; then
        do_kill=true
#        if [ "$1" = "start" ]; then
#            #
#            # start in background mode
#            #
#            background=true;
#        fi
    else
        args="${args} $1"
    fi
    shift;
done

java_home=$(get_java_home) || { echo "failed to get JAVA_HOME"; exit 1; }
classpath=$(get_classpath) || { echo "failed to build classpath"; exit 1; }

if ${do_kill}; then
    #
    # used to remotely kill gld processes stuck in receiving
    #
    pids=$(get-gld-pids)
    pids=$(echo "${pids}")
    [ -z ${pids} ] && echo "no gld processes running on $(hostname)" || { kill -9 ${pids}; echo "killed ${pids}"; }
    exit 0
fi

java_bin="java"
[ "${java_home}" != "" ] && java_bin="${java_home}/bin/java"

command="${java_bin} -Xms${memory} -Xmx${memory} -cp ${classpath} ${debug_args} ${output_settings} ${main_class} ${args}"

${verbose} && echo "${command}" 1>&2;

if ${background}; then
    # TODO background does not work well yet, use load, not start
    echo "gld launched in background, use gld stop|status to interact with it"
else
    ${command}
fi




