<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">

    <id>public-binary-release</id>

    <formats>
        <format>zip</format>
    </formats>

    <includeBaseDirectory>true</includeBaseDirectory>

    <files>
        <file>
            <!--
                Needs the extension name replaced
            -->
            <source>./src/main/bash/.install</source>
            <filtered>true</filtered>
            <outputDirectory>bin</outputDirectory>
            <fileMode>0755</fileMode>
        </file>
    </files>

    <dependencySets>

        <!--
            We place the integration libraries into the root directory of the extension ZIP file
        -->
        <dependencySet>
            <outputDirectory>.</outputDirectory>
            <includes>
                <include>io.novaordis.gld.extensions.jboss-datagrid:*</include>
            </includes>
        </dependencySet>

        <!--
            We place the service external dependencies under a sub-directory whose name is the version we ship
            dependencies for. We do that by including mostly everything, except the integration library, and the
            dependencies of io.novaordis.gld.extensions.jboss-datagrid:jboss-datagrid-common, which was NOT declared as
            <provided> because we needed its dependencies during compilation and testing. Those libraries, which are
            the GLD API and *its* dependencies, will already be available in the runtime.
        -->
        <dependencySet>
            <outputDirectory>${jboss.datagrid.version}</outputDirectory>
            <excludes>
                <exclude>io.novaordis.gld.extensions.jboss-datagrid:*</exclude>
                <exclude>io.novaordis.gld:*</exclude>
                <exclude>org.yaml:snakeyaml</exclude>
            </excludes>
        </dependencySet>

    </dependencySets>

</assembly>

