#!/bin/bash


command=${0##*/}


function get_dependencies()
{
    (cd ${project_home}; mvn dependency:build-classpath -Dmdep.pathSeparator=" " -Dmdep.outputFile=./target/dependencies.txt 1>&2) || exit 1
    cat ${project_home}/target/dependencies.txt
}

force=false

while [ "$1" != "" ]; do
    if [ "$1" = "--force" ]; then
        force=true
    fi
    shift
done

case "${command}" in

  make-zip)

        (cd ${project_home}; mvn clean install) || exit 1

        version=$(get_version)

        mkdir -p ${project_home}/target/gld-${version}/lib
        mkdir ${project_home}/target/gld-${version}/bin

        cp ${project_home}/target/gld-${version}.jar ${project_home}/target/gld-${version}/lib && echo "gld-${version}.jar copied" || exit 1;

        cp ${project_home}/src/main/bash/gld ${project_home}/target/gld-${version}/bin && echo "gld copied" || exit 1;
        chmod a+rx ${project_home}/target/gld-${version}/bin/gld && echo "gld made executable" || exit 1;

        cp ${project_home}/src/main/bash/cca ${project_home}/target/gld-${version}/bin && echo "cca copied" || exit 1;
        chmod a+rx ${project_home}/target/gld-${version}/bin/cca && echo "cca made executable" || exit 1;

        cp ${project_home}/README ${project_home}/target/gld-${version} && echo "README copied" || exit 1;

        dependencies=$(get_dependencies) || exit 1
        for i in ${dependencies}; do
            [ -f ${i} ] || { echo "dependency ${i} does not exist" 1>&2; exit 1; }
            cp ${i} ${project_home}/target/gld-${version}/lib && echo $(basename ${i})" copied in ${project_home}/target/gld-${version}/lib" || exit 1;
        done

        (cd ${project_home}/target; zip -r ./gld-${version}.zip gld-${version}) && echo "${project_home}/target/gld-${version}.zip created" || exit 1
        ;;


  *)
        echo "unknown command ${command}"
        exit 1
esac


